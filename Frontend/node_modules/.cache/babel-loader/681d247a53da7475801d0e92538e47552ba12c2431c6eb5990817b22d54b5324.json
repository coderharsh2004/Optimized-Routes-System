{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tn3402\\\\Desktop\\\\Minor\\\\frontend\\\\src\\\\components\\\\DijkstraForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/DijkstraForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DijkstraForm = ({\n  onSubmit,\n  result\n}) => {\n  _s();\n  const [graph, setGraph] = useState('');\n  const [source, setSource] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const parsedGraph = graph.split('\\n').map(row => row.split(',').map(Number));\n    onSubmit(parsedGraph, parseInt(source, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dijkstra-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dijkstra-form-title\",\n      children: \"Enter Graph Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"dijkstra-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"dijkstra-form-label\",\n        children: [\"Graph (edges as comma-separated rows, e.g. 0,1,2,3):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: graph,\n          onChange: e => setGraph(e.target.value),\n          placeholder: \"Enter graph as rows of comma-separated numbers\",\n          className: \"dijkstra-form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"dijkstra-form-label\",\n        children: [\"Source Node:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: source,\n          onChange: e => setSource(e.target.value),\n          placeholder: \"Enter source node\",\n          className: \"dijkstra-form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"dijkstra-form-button\",\n        children: \"Run Dijkstra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Shortest Distances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(result).map(([node, distance]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Node \", node, \": \", distance]\n        }, node, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(DijkstraForm, \"jEB7n828YdCdHH5VLDkavTiHN3o=\");\n_c = DijkstraForm;\nexport default DijkstraForm;\nvar _c;\n$RefreshReg$(_c, \"DijkstraForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DijkstraForm","onSubmit","result","_s","graph","setGraph","source","setSource","handleSubmit","e","preventDefault","parsedGraph","split","map","row","Number","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","type","Object","entries","node","distance","_c","$RefreshReg$"],"sources":["C:/Users/Tn3402/Desktop/Minor/frontend/src/components/DijkstraForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/DijkstraForm.css';\r\n\r\nconst DijkstraForm = ({ onSubmit, result }) => {\r\n  const [graph, setGraph] = useState('');\r\n  const [source, setSource] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const parsedGraph = graph.split('\\n').map((row) => row.split(',').map(Number));\r\n    onSubmit(parsedGraph, parseInt(source, 10));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dijkstra-form-container\">\r\n      <h2 className=\"dijkstra-form-title\">Enter Graph Data</h2>\r\n      <form onSubmit={handleSubmit} className=\"dijkstra-form\">\r\n        <label className=\"dijkstra-form-label\">\r\n          Graph (edges as comma-separated rows, e.g. 0,1,2,3):\r\n          <textarea\r\n            value={graph}\r\n            onChange={(e) => setGraph(e.target.value)}\r\n            placeholder=\"Enter graph as rows of comma-separated numbers\"\r\n            className=\"dijkstra-form-textarea\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <label className=\"dijkstra-form-label\">\r\n          Source Node:\r\n          <input\r\n            type=\"number\"\r\n            value={source}\r\n            onChange={(e) => setSource(e.target.value)}\r\n            placeholder=\"Enter source node\"\r\n            className=\"dijkstra-form-input\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" className=\"dijkstra-form-button\">\r\n          Run Dijkstra\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display the result after Dijkstra is run */}\r\n      {result && (\r\n        <div className=\"result-container\">\r\n          <h3>Shortest Distances</h3>\r\n          <ul>\r\n            {Object.entries(result).map(([node, distance]) => (\r\n              <li key={node}>\r\n                Node {node}: {distance}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DijkstraForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}