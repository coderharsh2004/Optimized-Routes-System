{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tn3402\\\\Desktop\\\\Minor\\\\frontend\\\\src\\\\components\\\\DijkstraForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/DijkstraForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DijkstraForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [graph, setGraph] = useState('');\n  const [source, setSource] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Parse graph input into a proper format\n    const parsedGraph = graph.split('\\n').map(row => row.split(',').map(Number));\n    onSubmit(parsedGraph, parseInt(source, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"dijkstra-result\",\n      children: \"Enter Graph Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Graph (edges as comma-separated rows, e.g. 0,1,2,3):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: graph,\n          onChange: e => setGraph(e.target.value),\n          placeholder: \"Enter graph as rows of comma-separated numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Source Node:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: source,\n          onChange: e => setSource(e.target.value),\n          placeholder: \"Enter source node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Run Dijkstra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(DijkstraForm, \"jEB7n828YdCdHH5VLDkavTiHN3o=\");\n_c = DijkstraForm;\nexport default DijkstraForm;\nvar _c;\n$RefreshReg$(_c, \"DijkstraForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DijkstraForm","onSubmit","_s","graph","setGraph","source","setSource","handleSubmit","e","preventDefault","parsedGraph","split","map","row","Number","parseInt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Tn3402/Desktop/Minor/frontend/src/components/DijkstraForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport '../styles/DijkstraForm.css'\r\nconst DijkstraForm = ({ onSubmit }) => {\r\n  const [graph, setGraph] = useState('');\r\n  const [source, setSource] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Parse graph input into a proper format\r\n    const parsedGraph = graph.split('\\n').map((row) => row.split(',').map(Number));\r\n    onSubmit(parsedGraph, parseInt(source, 10));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='dijkstra-result'>Enter Graph Data</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Graph (edges as comma-separated rows, e.g. 0,1,2,3):\r\n          <textarea\r\n            value={graph}\r\n            onChange={(e) => setGraph(e.target.value)}\r\n            placeholder=\"Enter graph as rows of comma-separated numbers\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Source Node:\r\n          <input\r\n            type=\"number\"\r\n            value={source}\r\n            onChange={(e) => setSource(e.target.value)}\r\n            placeholder=\"Enter source node\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Run Dijkstra</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DijkstraForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,WAAW,GAAGP,KAAK,CAACQ,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACE,MAAM,CAAC,CAAC;IAC9Eb,QAAQ,CAACS,WAAW,EAAEK,QAAQ,CAACV,MAAM,EAAE,EAAE,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAIkB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDtB,OAAA;MAAME,QAAQ,EAAEM,YAAa;MAAAS,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,GAAO,sDAEL,eAAAjB,OAAA;UACEuB,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;UAC1CG,WAAW,EAAC;QAAgD;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtB,OAAA;QAAAiB,QAAA,GAAO,cAEL,eAAAjB,OAAA;UACE2B,IAAI,EAAC,QAAQ;UACbJ,KAAK,EAAEjB,MAAO;UACdkB,QAAQ,EAAGf,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;UAC3CG,WAAW,EAAC;QAAmB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}